<!--#set description Explains how to configure the simulator -->
<!--#set robots index,follow -->
<!--#set title Configuration -->
<!--#array-add js-includes js/config.js -->
<!--#set body-onload initConfiguration() -->
<!--#set body_class config -->
<!--#include includes/heading.thtml -->

<h3>Configuration</h3>
<p>The config folder contains two files: config.ini and sensors.ini.
</p>
<p>
If you want to modify any of them, make sure the simulator is not running 
and make a backup of the current ini files.
</p>

<h3>config/config.ini</h3>
<p>
The format is fairly intuitive and similar to typical ini files.  
Comments in config.ini will explain what the properties are and how they are used.
</p>
<p>
You may want to edit config.ini to:
<ul>
<li>Change size, shape... of various track objects inclucing ramp, pylons, tunnel</li>
<li>Tell the simulator about new competition rules</li>
<li>Set unique properties of your robot such as suspension-softness</li>
</ul>
</p>

<h3>config/sensors.ini</h3>
<ul>
<li>This file describes all sensors currently used by the simulator.</li>
<li>It is a full description of sensor positions, orientation, and other properties.</li>
<li>sensors.ini is read from every time the simulator loads and written to every time the simulator 
shuts down properly.</li>
<li>Do not change the video sensor names.</li>
<li>The format is similar to typical ini files with a small exception.
Lines like "sensor lidar1 lidar" are defining new objects and subsequent 
 lines can set properties for the new objects.  
It is a bit like declaring a variable and being able to use it below its declaration.</li>
<li>The only reason we can think of you editing sensors.ini is 
 if you want to have another program automatically generate or import the sensor layout.</li>
</ul>


<!--#include includes/footer.thtml -->