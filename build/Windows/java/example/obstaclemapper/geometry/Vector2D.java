package geometry;public class Vector2D{ private double x,y;   public Vector2D(double x,double y)  {    assert !(new Double(x).isNaN());	assert !(new Double(y).isNaN());	    this.x=x;	this.y=y;  }   public double getX()  {    return x;  }    public double getY()  {    return y;  }    public void setX(double x)  {    this.x=x;  }    public void setY(double y)  {    this.y=y;  }    public double dot(Vector2D v)  {    return this.x*v.x+this.y*v.y;  }    public double getMagnitude()  {    return Math.sqrt(x*x+y*y);  }    public void rotateBy(double radians)  {    Rotator2D r = new Rotator2D(radians);	Vector2D v = r.transform(this);	this.x=v.x;	this.y=v.y;  }    public Vector2D plus(Vector2D v)  {    return new Vector2D(v.x+x,v.y+y);  }    public Vector2D minus(Vector2D v)  {    return new Vector2D(x-v.x,y-v.y);  }    public Vector2D times(double scalar)  {    return new Vector2D(x*scalar,y*scalar);  }    /**  Finds distance from the specified point  */  public double distanceFrom(double x,double y)  {    x-=this.x;	y-=this.y;	    return Math.sqrt(x*x+y*y);  }    public double distanceFrom(Vector2D v)  {    return distanceFrom(v.getX(),v.getY());  }  public String toString()  {    return "("+x+", "+y+")";  }    public boolean equals(Object o)  {    if (!(o instanceof Vector2D))	   return false;	   	Vector2D p = (Vector2D)o;    	return this.x==p.x && this.y==p.y;  }}